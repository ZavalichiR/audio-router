# Discord Audio Router Bot Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Main bot token (required)
# Get this from Discord Developer Portal > Your Application > Bot > Token
MAIN_BOT_TOKEN=your_main_bot_token_here

# =============================================================================
# OPTIONAL BOT CONFIGURATION
# =============================================================================

# Bot command prefix (default: !)
BOT_PREFIX=!

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# LISTENER BOT TOKENS (REQUIRED FOR MULTI-CHANNEL AUDIO)
# =============================================================================

# Each listener bot runs in its own process and needs its own token
# This allows multiple simultaneous audio streams across different channels

# Single listener bot token (minimum for testing)
LISTENER_BOT_TOKEN=your_listener_bot_token_here

# Multiple listener bot tokens (comma-separated) - RECOMMENDED
# LISTENER_BOT_TOKENS=token1,token2,token3,token4,token5

# Numbered listener bot tokens (alternative format)
# LISTENER_BOT_TOKEN_1=token1
# LISTENER_BOT_TOKEN_2=token2
# LISTENER_BOT_TOKEN_3=token3
# LISTENER_BOT_TOKEN_4=token4
# LISTENER_BOT_TOKEN_5=token5

# =============================================================================
# ACCESS CONTROL CONFIGURATION (SIMPLIFIED)
# =============================================================================

# Role names for the audio router system
# The bot will create these roles automatically if they don't exist
SPEAKER_ROLE_NAME=Speaker
BROADCAST_ADMIN_ROLE_NAME=Broadcast Admin

# Whether to automatically create roles if they don't exist
AUTO_CREATE_ROLES=true

# =============================================================================
# ROLE SYSTEM EXPLANATION
# =============================================================================

# The audio router uses a simple 2-role system:
#
# 1. SPEAKER_ROLE_NAME (default: "Speaker")
#    - Required to join speaker channels
#    - Anyone with this role can speak in broadcast sections
#    - Bot creates this role but doesn't assign it to anyone
#
# 2. BROADCAST_ADMIN_ROLE_NAME (default: "Broadcast Admin") 
#    - Required to use bot commands (!setup_broadcast, !start_broadcast, etc.)
#    - Server administrators can always use bot commands
#    - Bot creates this role but doesn't assign it to anyone
#
# 3. Listener channels
#    - Open to everyone (no role required)
#    - Anyone can join and speak in listener channels
#
# After setup, you need to manually assign these roles to users:
# - Give "Speaker" role to users who should be able to speak
# - Give "Broadcast Admin" role to users who should control broadcasts

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Go to Discord Developer Portal: https://discord.com/developers/applications
# 2. Create a new application or select existing one
# 3. Go to "Bot" section
# 4. Create a bot and copy the token to MAIN_BOT_TOKEN
# 5. Enable these Privileged Gateway Intents:
#    - Server Members Intent
#    - Message Content Intent
# 6. Go to "OAuth2" > "URL Generator"
# 7. Select scopes: bot
# 8. Select bot permissions: Administrator (or specific permissions listed in README)
# 9. Copy the generated URL and use it to invite your bot to your server
# 10. Configure listener bot tokens for multi-channel audio
# 11. Run: python start_bot.py
# 12. Use !create_roles to create the required roles
# 13. Assign roles to users as needed:
#     - Give "Speaker" role to users who should be able to speak
#     - Give "Broadcast Admin" role to users who should control broadcasts
